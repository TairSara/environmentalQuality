# Generated by Django 5.0.2 on 2024-03-07 12:48

from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('website', '0004_rename_name_user_city_remove_user_is_corp_and_more'),
    ]

    operations = [
     #   migrations.RemoveField(
     #       model_name='privateuser',
     #       name='user',
      #  ),
      #  migrations.RenameField(
       #     model_name='user',
       #     old_name='city',
       #     new_name='location',
       # ),
      #  migrations.RemoveField(
       #     model_name='user',
       #     name='userType',
       # ),
      #  migrations.AddField(
       #     model_name='user',
       #     name='comp_num',
       #     field=models.PositiveIntegerField(blank=True, null=True),
       # ),
        migrations.AddField(
            model_name='user',
            name='user_type',
            field=models.BooleanField(choices=[(False, 'Private'), (True, 'Corporation')], default=False),
        ),
        migrations.AlterField(
            model_name='user',
            name='email',
            field=models.EmailField(max_length=100, unique=True),
        ),
        migrations.AlterField(
            model_name='user',
            name='first_name',
            field=models.CharField(max_length=50),
        ),
        migrations.AlterField(
            model_name='user',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups'),
        ),
        migrations.AlterField(
            model_name='user',
            name='last_name',
            field=models.CharField(max_length=50),
        ),
        migrations.AlterField(
            model_name='user',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions'),
        ),
      #  migrations.DeleteModel(
       #     name='CorpUser',
       # ),
      #  migrations.DeleteModel(
       #     name='PrivateUser',
       # ),
    ]
